#+title: Incremental informational value of floorplans for rent price prediction
#+SUBTITLE: Applications of modern computer vision techniques in real-estate
#+Bibliography: local-bib.bib
#+BEAMER_FRAME_LEVEL: 2
#+OPTIONS: H:4 toc:nil num:nil
#+EMAIL:     jiyan.schneider@keio.jp
#+AUTHOR: Jiyan Schneider* and Takahiro Hoshino*
#+OPTIONS: reveal_history:t reveal_fragmentinurl:t

:REVEAL_PROPERTIES:
#+REVEAL_TITLE_SLIDE: <h1>%t</h1><br><h2>%s</h2><br><h4>%a</h4><br>*Keio University, Graduate school of Economics <br> *RIKEN AIP
#+REVEAL_ROOT: ./reveal.js/
#+REVEAL_EXTRA_CSS: custom.css
#+REVEAL_THEME: serif
#+REVEAL_TRANS: linear
#+REVEAL_HLEVEL: 1

:END:
* Welcome
 - https://jiyans.github.io/real_estate_analysis/
#+ATTR_HTML: :width 500px
[[./assets/pres_qr.jpg]]
* Introduction
#+BEGIN_NOTES
   - Tax appraisers Property Appraisal
     - Governments doing rent price imputation
     - Firms estimating real-estate prices for investing purposes
     - Value appraisal for tax purposes
   - For example, governments have to impute rent prices to calculate the GDP
   - Real estate rent/price predictions are conducted in different contexts:
   - Currently most large-scale estimations are conducted using tabular data
#+END_NOTES

#+ATTR_REVEAL: :frag (roll-in)
 - Real estate price estimations are done in many contexts
     - Governments doing rent price imputation
     - Firms estimating real-estate prices for investing purposes
     - Value appraisal for tax purposes
 - Depending on the context, availability of data and necessity of accuracy in predictions changes
 - In this study we used a Neural Network to analyze floor plan images
 - We couple the predictions of the NN with a linear regression model

#+ATTR_REVEAL: :frag (roll-in)
Hypothesis: floor plan images contain information about consumer preferences, so they should help with predictions

#+ATTR_REVEAL: :frag (roll-in)
Further research into this topic might lead to further insights into the price structure of real estate

*** Price structure of real estate
#+BEGIN_NOTES
 - Hedonic meaning that their price is determined by the properties that make it up
 - It is harder to obtain information on structural features than on environmental ones
 - Structural features are harder to obtain
   - They could be essentially infinite (for example)
 - However, we think that most of these "structural" features are in some way or another encapsulated in the floorplans
#+END_NOTES

#+ATTR_REVEAL: :frag (roll-in)
 - Real estate prices are usually considered Hedonic prices in economics [cite:@rosen_1974_hedonic]
 - Factors making up real estate prices can be divided into two categories
#+begin_export html
<br>
#+end_export
#+ATTR_REVEAL: :frag (roll-in)
| Structural                    | Environmental               |
|-------------------------------+-----------------------------|
| Apartment size                | Name of Closest station     |
| Floor of apartment            | No. of supermarkets         |
| Material used in construction | Distance to the city center |
| Floor layout                  | No. of schools              |
| Kitchen Space                 | No. of Parks                |
| Interior design and finish    |                             |
#+begin_export html
<br>
#+end_export

#+ATTR_REVEAL: :frag (roll-in)
 - Consumers tend to value structural factors more than environmental ones [cite:@choi2003;@akiyamayuki2019230204]
*** Machine Learning in real estate
#+BEGIN_NOTES
 - [cite:@hattori2019rent] use PCA to extract feature vectors from floorplans
   - They use it in various models
   - While they note slight improvements, they say that it is challenging to find merits for their improvements, because they are too small
 - [cite:@limsombunchai2004]
   - In this paper the authors argue for the usage of NN's in real-estate price prediction despite the hardships of their interpretation, simply due to their predictive power
   - They are using tabular data
 - At the time of writing the paper we are not aware of any research using a Neural Netowrk trained with floor plan images for rental price predictions
#+END_NOTES
#+ATTR_REVEAL: :frag (roll-in)
 - Earliest example we could find of research being done using NN's for rent price prediction is from 2004 [cite:@limsombunchai2004]
 - [cite/text/c:@hattori2019rent]  use Principal Component Analysis to extract feature vectors of floorplan data
      #+begin_quote
[H]owever, the differences are not significant and it is difficult to find merits to use FPIs for rent prediction model. - [cite/text/cf:@hattori2019rent]
      #+end_quote
 - [cite/text/cf:@zeng2019deep] use Computer Vision techniques for floorplans, to try detect the functionalities of the rooms
 - We have also found research using Computer Vision techniques for price estimation using photos of the interior and exteriors [cite:@poursaeed2018]
* Methodology
** Data
 - Snapshot of tabular and image data of real estate properties
 - 140,000 observations, 3 categorical and 7 continuous features
 - Only include properties from the Tokyo Metropolitan area
 - Limit observations to Tokyo Metropolitan area to avoid having to deal with multiple markets
*** Floorplan example
#+BEGIN_NOTES
log of the price in 10000 Yen units.
#+END_NOTES
#+ATTR_HTML:
#+CAPTION: An example of randomly chosen floorplans and the log of their rent prices. (rent price denoted in 10000 Yen units.)
[[./assets/rand_imgs.png]]

*** Tabular data
#+NAME: tab:var_explanation
#+ATTR_LATEX: :name tab:var_explanation :label tab:var_explanation
|---------------------+-----------------------------------------------------------------|
| Variable            | Explanation                                                     |
|---------------------+-----------------------------------------------------------------|
| apt_rent            | Rent per month of the listing. In units of 10000 Yen            |
|---------------------+-----------------------------------------------------------------|
|---------------------+-----------------------------------------------------------------|
| Apt. Floor          | The floor the property is on                                    |
| Size in \( m^{2} \) | Size of property in $m^2$                                       |
| No Floors bldg      | No of floors of the building                                    |
| Age bldg.           | No. of years ago the property was built                         |
| Style               | Description of the layout type of the apartment (1K, 1LDK,... ) |
| Admin fee  10,000Â¥  | Amount of monthly administration fee                            |
| Station             | Name of the closest public transport station                    |
| Method              | How "Time to station" is measured (foot, bus, or car)           |
| Time to station     | No. minutes of taking "method" to the next station              |
|---------------------+-----------------------------------------------------------------|

** Neural Network
#+BEGIN_NOTES
 - scaling of the last layer is important for the model to converge
 - the model would put out predictions that are too high -> makes the gradients become big -> weight adjustments too big -> model diverges
 - Just scaling the outputs in the last layers is enough, but we now have a new hyperparameter with this y-range
 - We used Resnet50, because many models use this size, but again, we found that using a bigger model e.g. Resnet152 gave better results
 - We chose Resnet50 over newer models, because it is a well studied model
 - The predetermined range was the lower and upper integer bounds of the data
#+END_NOTES

#+ATTR_REVEAL: :frag (roll-in)
 - Used a ~Resnet50~ architecture [cite:@he15:deep_resid_learn_image_recog]
 - Weights were initialized to pretrained weights available from ~torchvision~ [cite:@NEURIPS2019_9015]
 - Randomly initialized fully connected layers at the end of the usual ~Resnet50~ model
 - added a sigmoid "layer" to scale the outputs of the last layer into a predetermined range
*** Training
 - When training the Neural network we split the data into a train and test set.
 - The above splits were performed on the building level (as opposed to the apartment level)
 - This was done to make sure that the NN doesn't simply remember the style of floorplans of certain buildings
 - We fine-tuned the model as follows:
   - First we froze pretrained layers, trained for a 5 epochs (~1h per epoch)
   - Afterwards, unfroze them and trained the whole model for 10 epochs (~1h:30 per epoch)
 - The sigmoid layer was essential for the convergence of the model
** Augmentations
#+ATTR_LATEX:
#+CAPTION: This figure showcases the properties of each resizing method. The first and second rows compare nine floorplans. The third shows different crops of the leftmost floorplan.
[[./assets/resizes.jpg]]


* Results
** Quantitative
*** Models
#+BEGIN_NOTES
 - NN Factor is is the output of the NN based on the floorplans seen.
 - Model estimated on data as a whole
#+END_NOTES

#+ATTR_HTML: :height 500px
#+CAPTION: Regression table of the 3 estimated models (categorical features omitted).
[[./assets/model_table.jpg]]

*** Performance
#+NAME: tab:regression
#+LABEL: tab:regression
#+CAPTION: \( R^2 \) and sample size for the three models obtained on different parts of the dataset.
#+ATTR_LATEX: :label tab:regression :name tab:regression
|--------------------------------------+---------+---------+--------|
|                                      |   total |   train |   test |
|--------------------------------------+---------+---------+--------|
| Model 1:  \( R^{2} \) MLR Without NN |   0.915 |   0.915 |  0.914 |
| Model 2: \( R^{2} \) MLR With NN     |   0.945 |   0.951 |  0.923 |
| Model 3: \( R^{2} \) LR NN only      |   0.897 |   0.917 |  0.817 |
| N                                    | 141,394 | 113,116 | 28,278 |
|--------------------------------------+---------+---------+--------|

 - We can see an improvement on the total dataset  \( R^2: 0.915 \rightarrow 0.945 \)
 - test data improvement is smaller \( R^2: 0.914 \rightarrow 0.923 \)
*** Performance
#+NAME: tab:error_reduction
#+LABEL: tab:error_reduction
#+CAPTION: Reduction of error in predictions on test set. \( (N=28,278) \)
#+ATTR_LATEX: :label tab:regression :name tab:regression
| Model              | Total Error (10,000 Yen) | MAE (10,000 Yen) |
|--------------------+--------------------------+------------------|
| Model 1 (Baseline) |                    43813 |           1.5493 |
| Model 2 (w/ NN)    |                    32131 |           1.1362 |


Reduction of error of \( \approx 26\% \).
 - \( 438,130,000 - 321,310,000  = 116,820,000 \)
 - \( 116,820,000 \) Yen improvement in prediction

** Qualitative
*** Randomly Extracted sample
#+ATTR_HTML:
#+CAPTION: NN predictions and ground truths for a randomly extracted sample of the dataset. (in 10,000Â¥)
[[./assets/random_table.png]]

*** Lowest predictions of the neural net
#+BEGIN_NOTES
 - All of the lowest predictions are of single room apartments in dormitories
 - The model probably picked up on the repetitive nature of these floorplans
 - thus knows to predict these apartments to have lower rents
 - The middle 2 pics are actually the same, but predictions are different ( Due to random cropping )


#+END_NOTES

#+ATTR_HTML:
#+CAPTION: The four predictions the model predicted the lowest rent for. (in 10,000Â¥)
[[./assets/rand_neg_top_100.png]]
*** Highest predictions of the neural net
#+BEGIN_NOTES
 - The highest predictions all have multiple bed rooms
 - Multiple floors
 - complicated layouts
 - The magnitude of the overpredictions is quite high ()
#+END_NOTES


#+ATTR_HTML:
#+CAPTION: The floorplans of four apartments with very highest predicted rents. (in 10,000Â¥)
[[./assets/rand_top_100.png]]

*** Plot of residulas

#+ATTR_HTML:
#+CAPTION: The floorplans of four apartments with very highest predicted rents. (in 10,000Â¥)
[[./assets/residual_plot.png]]

* Limitations
#+ATTR_REVEAL: :frag (roll-in)
 - Improvements might decrease when more structural variables are available
 - Using more recent or bigger models, might give better results than the Resnet50
 - Currently we are only considering a single market

* Conclusion
#+ATTR_REVEAL: :frag (roll-in)
 - Hypothesis was that floorplans contain valuable information about prices, which we can leverage with neural networks
 - Trained a Resnet model to predict rent prices using the floor plans images
 - We were able to improve the accuracy over the model using tabular data only
 - We believe that using floorplans can be a practically viable option, especially in situations where it is hard to obtain many structural features

* Bibliography
:PROPERTIES:
:CUSTOM_ID:bibliography
:END:
#+print_bibliography:
# * Appendix
# **** Largest decreases in Regression prediction after including NN output
# #+CAPTION: Floorplans of apartments with the biggest decreases in predicted rent due to NN output (in 10,000Â¥)
# [[./assets/overpreds.png]]

# **** Largest increases
# #+CAPTION: Floorplans of apartments with the biggest increases in predicted rent due to NN output (in 10,000Â¥)
# [[./assets/underpreds.png]]

# *** Preprocessing of Images
# #+BEGIN_NOTES
#  - We chose 224x224 because many image models use this size, we found that using bigger pictures gave better results
#  - Cropping out of the image is done randomly as a augmentation technique
#  - Image rotations were done at 90, 180, 270, 0 degree angles
#  - We did not mirror the floorplans on purpose, as that would change the floorplans fundamentally ( Doors open the wrong ways, the compass shows the wrong direction )
# #+END_NOTES

#  - Normalization of images with normalization statistics of pretrained model
#  - 2 augmentations
#    - Randomly rotating the images
#    - randomly cropping out a 224x224 square of the image
#    - We did not mirror the floorplans on purpose, as that would change the floorplans fundamentally

# *** Resizing Methods
# #+BEGIN_NOTES
# In this picture we can see two other resizing techniques often used
#  - Distortion
#  - Center cropping
#  - Distorting is bad because it distorts the proportions of the floor plan, making it another floorplan all together
#  - Center cropping is bad because we might crop off important parts of the image
# #+END_NOTES

# #+CAPTION: Showcasing different resizing methods
# [[file:./assets/resizes.jpg]]
# ** Cuts
#  - [X] Cut 3:00-3:20
#  - [X] Cut 4:55-5:05
#  - [X] Cut 8:21 - 8:26
#  - [X] At about 8:30 cut the silence around "That"
#  - [X] Around 9:45, fix the start
#  - [X] Cut at 11:33-11:43
#  - Maybe retake the "Limitations" after ~13:05
#  - Also retake 13:40
#  - Cut after 14:50
# *** From the "limitations" video
#  - use 01:57~02:30
